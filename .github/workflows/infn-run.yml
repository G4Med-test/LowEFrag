name: INFN run  parallel

on:
  workflow_run:
    workflows: ["INFN run unit"]    
    types:
      - completed

jobs:
  get-macros:
    runs-on: aiinfn-runner-g4    
    if: ${{ github.event.workflow_run.conclusion == 'success' }}    
    outputs:
      macro_files: ${{ steps.list-macros.outputs.all_macros }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: List macro files
        id: list-macros
        run: |
          MACRO_FILES=$(find macro/ -name "*.mac" -type f -printf '%P\n' | jq -R -s -c 'split("\n")[:-1]')
          echo "all_macros=$MACRO_FILES" >> $GITHUB_OUTPUT
          echo "Found macros: $MACRO_FILES"

  pull-and-run-container:
    needs: get-macros
    runs-on: aiinfn-runner-g4
    strategy:
      fail-fast: false 
      matrix:
        macro: ${{ fromJson(needs.get-macros.outputs.macro_files) }}

    steps:
      - name: Set Apptainer Cache and Temp Directories
        run: |
          mkdir -p /tmp/apptainer_cache
          mkdir -p /tmp/apptainer_tmp
          mkdir -p /tmp/runner
          echo "APPTAINER_CACHEDIR=/tmp/apptainer_cache" >> $GITHUB_ENV
          echo "APPTAINER_TMPDIR=/tmp/apptainer_tmp" >> $GITHUB_ENV
          
      - name: Set tag and repo lowercase
        id: setup
        run: |
          TAG=${{ github.event.workflow_run.head_sha }}
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "repo_lower=$REPO_LOWER" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        run: |
          echo ${{ secrets.GHCR_PAT }} | apptainer registry login -u ${{ secrets.GHCR_USERNAME }} --password-stdin oras://ghcr.io

      - name: Pull Container from GHCR
        run: |
          apptainer pull /tmp/runner/LowEFrag.sif oras://ghcr.io/${{ steps.setup.outputs.repo_lower }}:${{ steps.setup.outputs.tag }}
          
      - name: Prepare apptainer command
        run: |
          echo "Contents of ${{ github.workspace }}:"
          ls -l ${{ github.workspace }}
          echo "Contents of ${{ github.workspace }}/macro/:"
          ls -l ${{ github.workspace }}/macro/
          cat <<EOF > /tmp/runner/run
          apptainer exec \
            --unsquash \
            -B /cvmfs/geant4.cern.ch/share/data:/opt/geant4/data \
            -B "${{ github.workspace }}:/app_repo" \
            /tmp/runner/LowEFrag.sif \
            "\$@"
          EOF
          chmod +x /tmp/runner/run
          
      - name: Check cvmfs
        run: |
          /tmp/runner/run bash -c "geant4-config --check-datasets"
          
      - name: Run the container with macro ${{ matrix.macro }}
        run: |
          echo "Attempting to check file: /app_repo/${{ matrix.macro }}"
          /tmp/runner/run bash -c "ls -l /app_repo/"
          /tmp/runner/run bash -c "cat /app_repo/${{ matrix.macro }} | head -n 5"
          echo "Running container with macro: ${{ matrix.macro }}"
          cd /tmp/runner && ./run /workspace/build/LowEFrag /app_repo/${{ matrix.macro }}
          
      - name: Upload simulation outputs as artifactAdd commentMore actions
        uses: actions/upload-artifact@v4
        with:
          name: simulation-outputs
          path: /tmp/outputs/    
